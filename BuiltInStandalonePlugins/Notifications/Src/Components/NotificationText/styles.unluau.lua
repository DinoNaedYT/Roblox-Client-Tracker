-- Generated with Unluau (https://github.com/valencefun/unluau)
local var263 = require(script.Parent.Parent.Parent.Parent.Packages.Framework).Styling
local var1 = var263.createStyleRule
var263 = var1
local var266 = {}
var266.AutomaticSize = Enum.AutomaticSize.Y
var266.BackgroundTransparency = 1
var266.BorderSizePixel = 0
local var273 = {}
var273.RichText = true
var273.Size = UDim2.new(1, 0, 0, 0)
var273.AutomaticSize = Enum.AutomaticSize.Y
var273.BackgroundTransparency = 1
var273.TextColor3 = "$TextPrimary"
var273.TextSize = 18
var273.Font = Enum.Font.SourceSans
var273.TextWrapped = true
var273.TextTruncate = Enum.TextTruncate.AtEnd
var273.TextXAlignment = Enum.TextXAlignment.Left
var273.TextYAlignment = Enum.TextYAlignment.Top
local var293 = {}
var293.MaxSize = Vector2.new(∞, 36)
var293.MinSize = Vector2.new(0, 18)
local var302 = var1("::UISizeConstraint", var293)
local var3 = var1("> #Subject", var273, {})
local var306 = {}
var306.Size = UDim2.new(1, 0, 0, 0)
var306.AutomaticSize = Enum.AutomaticSize.Y
var306.BackgroundTransparency = 1
var306.TextColor3 = "$TextSecondary"
var306.TextSize = 18
var306.Font = Enum.Font.SourceSans
var306.TextWrapped = true
var306.TextTruncate = Enum.TextTruncate.AtEnd
var306.TextXAlignment = Enum.TextXAlignment.Left
var306.TextYAlignment = Enum.TextYAlignment.Top
local var325 = {}
var325.MaxSize = Vector2.new(∞, 36)
var325.MinSize = Vector2.new(0, 18)
local var334 = var1("::UISizeConstraint", var325)
local var5 = var1("> #Subline", var306, {})
local var338 = {}
var338.Size = UDim2.new(1, 0, 0, 0)
var338.AutomaticSize = Enum.AutomaticSize.Y
var338.BackgroundTransparency = 1
var338.TextColor3 = "$TextSecondary"
var338.TextSize = 15
var338.Font = Enum.Font.SourceSans
var338.TextTruncate = Enum.TextTruncate.AtEnd
var338.TextXAlignment = Enum.TextXAlignment.Left
var338.TextYAlignment = Enum.TextYAlignment.Top
local var6 = var1("> #ElapsedTime", var338)
return var263(".Component-NotificationText", var266, {})
