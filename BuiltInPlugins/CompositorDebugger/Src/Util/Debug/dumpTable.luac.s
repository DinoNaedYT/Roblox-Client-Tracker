PROTO_0:
  FASTCALL1 TYPE R0 [+3]
  MOVE R3 R0
  GETIMPORT R2 K1 [type]
  CALL R2 1 1
  JUMPIFNOTEQKS R2 K2 ["number"] [+13]
  FASTCALL1 TYPE R1 [+3]
  MOVE R3 R1
  GETIMPORT R2 K1 [type]
  CALL R2 1 1
  JUMPIFNOTEQKS R2 K2 ["number"] [+6]
  JUMPIFLT R0 R1 [+2]
  LOADB R2 0 +1
  LOADB R2 1
  RETURN R2 1
  FASTCALL1 TOSTRING R0 [+3]
  MOVE R4 R0
  GETIMPORT R3 K4 [tostring]
  CALL R3 1 1
  FASTCALL1 TOSTRING R1 [+3]
  MOVE R5 R1
  GETIMPORT R4 K4 [tostring]
  CALL R4 1 1
  JUMPIFLT R3 R4 [+2]
  LOADB R2 0 +1
  LOADB R2 1
  RETURN R2 1

PROTO_1:
  JUMPIFNOTEQKNIL R0 [+3]
  LOADK R2 K0 ["<nil>"]
  RETURN R2 1
  ORK R1 R1 K1 [0]
  FASTCALL1 ASSERT R0 [+3]
  MOVE R3 R0
  GETIMPORT R2 K3 [assert]
  CALL R2 1 0
  FASTCALL1 ASSERT R1 [+3]
  MOVE R3 R1
  GETIMPORT R2 K3 [assert]
  CALL R2 1 0
  GETIMPORT R2 K6 [string.rep]
  LOADK R3 K7 ["  "]
  MOVE R4 R1
  CALL R2 2 1
  LOADK R3 K8 ["{
"]
  NEWTABLE R4 0 0
  MOVE R5 R0
  LOADNIL R6
  LOADNIL R7
  FORGPREP R5
  FASTCALL2 TABLE_INSERT R4 R8 [+5]
  MOVE R11 R4
  MOVE R12 R8
  GETIMPORT R10 K11 [table.insert]
  CALL R10 2 0
  FORGLOOP R5 2 [-8]
  GETIMPORT R5 K13 [table.sort]
  MOVE R6 R4
  DUPCLOSURE R7 K14 [PROTO_0]
  CALL R5 2 0
  GETIMPORT R5 K16 [ipairs]
  MOVE R6 R4
  CALL R5 1 3
  FORGPREP_INEXT R5
  GETTABLE R10 R0 R9
  FASTCALL1 TYPE R9 [+3]
  MOVE R13 R9
  GETIMPORT R12 K18 [type]
  CALL R12 1 1
  JUMPIFEQKS R12 K19 ["number"] [+18]
  FASTCALL1 TYPE R9 [+3]
  MOVE R13 R9
  GETIMPORT R12 K18 [type]
  CALL R12 1 1
  JUMPIFEQKS R12 K4 ["string"] [+11]
  LOADK R12 K20 ["`"]
  FASTCALL1 TOSTRING R9 [+3]
  MOVE R16 R9
  GETIMPORT R15 K22 [tostring]
  CALL R15 1 1
  MOVE R13 R15
  LOADK R14 K20 ["`"]
  CONCAT R11 R12 R14
  JUMP [+5]
  FASTCALL1 TOSTRING R9 [+3]
  MOVE R12 R9
  GETIMPORT R11 K22 [tostring]
  CALL R11 1 1
  MOVE R12 R3
  MOVE R13 R2
  LOADK R14 K7 ["  "]
  MOVE R15 R11
  LOADK R16 K23 [": "]
  CONCAT R3 R12 R16
  FASTCALL1 TYPE R10 [+3]
  MOVE R13 R10
  GETIMPORT R12 K18 [type]
  CALL R12 1 1
  JUMPIFNOTEQKS R12 K9 ["table"] [+8]
  MOVE R12 R3
  GETUPVAL R13 0
  MOVE R14 R10
  ADDK R15 R1 K24 [1]
  CALL R13 2 1
  CONCAT R3 R12 R13
  JUMP [+22]
  FASTCALL1 TYPE R10 [+3]
  MOVE R13 R10
  GETIMPORT R12 K18 [type]
  CALL R12 1 1
  JUMPIFNOTEQKS R12 K4 ["string"] [+7]
  MOVE R12 R3
  LOADK R13 K25 ["\""]
  MOVE R14 R10
  LOADK R15 K26 ["\"
"]
  CONCAT R3 R12 R15
  JUMP [+9]
  MOVE R12 R3
  FASTCALL1 TOSTRING R10 [+3]
  MOVE R16 R10
  GETIMPORT R15 K22 [tostring]
  CALL R15 1 1
  MOVE R13 R15
  LOADK R14 K27 ["
"]
  CONCAT R3 R12 R14
  FORGLOOP R5 2 [inext] [-73]
  MOVE R6 R3
  MOVE R7 R2
  LOADK R8 K28 ["}
"]
  CONCAT R5 R6 R8
  RETURN R5 1

PROTO_2:
  GETUPVAL R2 0
  MOVE R3 R0
  LOADN R4 0
  CALL R2 2 1
  JUMPIFNOT R1 [+4]
  MOVE R3 R1
  MOVE R4 R2
  CALL R3 1 0
  RETURN R0 0
  GETIMPORT R3 K1 [print]
  MOVE R4 R2
  CALL R3 1 0
  RETURN R0 0

MAIN:
  PREPVARARGS 0
  GETIMPORT R0 K1 [script]
  LOADK R2 K2 ["CompositorDebugger"]
  NAMECALL R0 R0 K3 ["FindFirstAncestor"]
  CALL R0 2 1
  GETIMPORT R1 K5 [require]
  GETTABLEKS R3 R0 K6 ["Src"]
  GETTABLEKS R2 R3 K7 ["Types"]
  CALL R1 1 1
  DUPCLOSURE R2 K8 [PROTO_1]
  CAPTURE VAL R2
  DUPCLOSURE R3 K9 [PROTO_2]
  CAPTURE VAL R2
  RETURN R3 1
