PROTO_0:
  LOADN R3 0
  JUMPIFLT R3 R0 [+2]
  LOADB R2 0 +1
  LOADB R2 1
  FASTCALL2K ASSERT R2 K0 [+4]
  LOADK R3 K0 ["Invalid buffer size, should be > 0"]
  GETIMPORT R1 K2 [assert]
  CALL R1 2 0
  DUPTABLE R2 K6 [{"__buffer", "__size", "__writeIndex"}]
  NEWTABLE R3 0 0
  SETTABLEKS R3 R2 K3 ["__buffer"]
  SETTABLEKS R0 R2 K4 ["__size"]
  LOADN R3 1
  SETTABLEKS R3 R2 K5 ["__writeIndex"]
  GETUPVAL R3 0
  FASTCALL2 SETMETATABLE R2 R3 [+3]
  GETIMPORT R1 K8 [setmetatable]
  CALL R1 2 1
  RETURN R1 1

PROTO_1:
  GETUPVAL R2 0
  GETTABLEKS R1 R2 K0 ["new"]
  GETTABLEKS R2 R0 K1 ["__size"]
  CALL R1 1 1
  GETTABLEKS R2 R0 K2 ["__buffer"]
  LOADNIL R3
  LOADNIL R4
  FORGPREP R2
  GETTABLEKS R7 R1 K2 ["__buffer"]
  SETTABLE R6 R7 R5
  FORGLOOP R2 2 [-4]
  GETTABLEKS R2 R0 K3 ["__writeIndex"]
  SETTABLEKS R2 R1 K3 ["__writeIndex"]
  RETURN R1 1

PROTO_2:
  GETTABLEKS R2 R0 K0 ["__buffer"]
  GETTABLEKS R3 R0 K1 ["__writeIndex"]
  SETTABLE R1 R2 R3
  GETTABLEKS R2 R0 K1 ["__writeIndex"]
  ADDK R2 R2 K2 [1]
  SETTABLEKS R2 R0 K1 ["__writeIndex"]
  GETTABLEKS R2 R0 K1 ["__writeIndex"]
  GETTABLEKS R3 R0 K3 ["__size"]
  JUMPIFNOTLT R3 R2 [+4]
  LOADN R2 1
  SETTABLEKS R2 R0 K1 ["__writeIndex"]
  RETURN R0 0

PROTO_3:
  FASTCALL1 GETMETATABLE R0 [+3]
  MOVE R4 R0
  GETIMPORT R3 K1 [getmetatable]
  CALL R3 1 1
  GETTABLE R2 R3 R1
  JUMPIFEQKNIL R2 [+2]
  RETURN R2 1
  FASTCALL1 TYPE R1 [+3]
  MOVE R6 R1
  GETIMPORT R5 K3 [type]
  CALL R5 1 1
  JUMPIFEQKS R5 K4 ["number"] [+2]
  LOADB R4 0 +1
  LOADB R4 1
  GETIMPORT R5 K7 [string.format]
  LOADK R6 K8 ["Invalid index type (%s, must be number)"]
  FASTCALL1 TYPE R1 [+3]
  MOVE R8 R1
  GETIMPORT R7 K3 [type]
  CALL R7 1 1
  CALL R5 2 -1
  FASTCALL ASSERT [+2]
  GETIMPORT R3 K10 [assert]
  CALL R3 -1 0
  GETTABLEKS R4 R0 K11 ["__writeIndex"]
  SUB R3 R4 R1
  LOADN R4 1
  JUMPIFNOTLT R3 R4 [+4]
  GETTABLEKS R4 R0 K12 ["__size"]
  ADD R3 R3 R4
  GETTABLEKS R5 R0 K13 ["__buffer"]
  GETTABLE R4 R5 R3
  RETURN R4 1

PROTO_4:
  NEWTABLE R2 0 0
  LOADN R3 0
  LOADN R6 1
  GETTABLEKS R8 R0 K0 ["__size"]
  FASTCALL2 MATH_MIN R8 R1 [+4]
  MOVE R9 R1
  GETIMPORT R7 K3 [math.min]
  CALL R7 2 1
  MOVE R4 R7
  LOADN R5 1
  FORNPREP R4
  SUB R7 R1 R3
  GETTABLE R8 R0 R6
  SETTABLE R8 R2 R7
  ADDK R3 R3 K4 [1]
  FORNLOOP R4
  SETTABLEKS R1 R0 K0 ["__size"]
  SETTABLEKS R2 R0 K5 ["__buffer"]
  LOADN R4 1
  SETTABLEKS R4 R0 K6 ["__writeIndex"]
  RETURN R0 0

PROTO_5:
  LOADK R2 K0 ["Buffer:
"]
  LOADN R5 1
  GETTABLEKS R3 R0 K1 ["__size"]
  LOADN R4 1
  FORNPREP R3
  MOVE R6 R2
  GETIMPORT R7 K4 [string.format]
  LOADK R8 K5 ["[%d]: %s
"]
  MOVE R9 R5
  GETTABLEKS R12 R0 K6 ["__buffer"]
  GETTABLE R11 R12 R5
  FASTCALL1 TOSTRING R11 [+2]
  GETIMPORT R10 K8 [tostring]
  CALL R10 1 1
  CALL R7 3 1
  CONCAT R2 R6 R7
  FORNLOOP R3
  MOVE R3 R2
  GETIMPORT R4 K4 [string.format]
  LOADK R5 K9 ["WriteIndex: %d
"]
  GETTABLEKS R6 R0 K10 ["__writeIndex"]
  CALL R4 2 1
  CONCAT R2 R3 R4
  MOVE R3 R1
  JUMPIF R3 [+2]
  GETIMPORT R3 K12 [print]
  MOVE R4 R3
  MOVE R5 R2
  CALL R4 1 0
  RETURN R0 0

MAIN:
  PREPVARARGS 0
  GETIMPORT R0 K1 [script]
  LOADK R2 K2 ["CompositorDebugger"]
  NAMECALL R0 R0 K3 ["FindFirstAncestor"]
  CALL R0 2 1
  NEWTABLE R1 0 0
  DUPCLOSURE R2 K4 [PROTO_0]
  CAPTURE VAL R1
  SETTABLEKS R2 R1 K5 ["new"]
  DUPCLOSURE R2 K6 [PROTO_1]
  CAPTURE VAL R1
  SETTABLEKS R2 R1 K7 ["clone"]
  DUPCLOSURE R2 K8 [PROTO_2]
  SETTABLEKS R2 R1 K9 ["push"]
  DUPCLOSURE R2 K10 [PROTO_3]
  SETTABLEKS R2 R1 K11 ["__index"]
  DUPCLOSURE R2 K12 [PROTO_4]
  SETTABLEKS R2 R1 K13 ["resize"]
  DUPCLOSURE R2 K14 [PROTO_5]
  SETTABLEKS R2 R1 K15 ["dump"]
  RETURN R1 1
