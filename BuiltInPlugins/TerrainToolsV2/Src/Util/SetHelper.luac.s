PROTO_0:
  NEWTABLE R1 0 0
  GETIMPORT R2 K1 [ipairs]
  MOVE R3 R0
  CALL R2 1 3
  FORGPREP_INEXT R2
  LOADB R7 1
  SETTABLE R7 R1 R6
  FORGLOOP R2 2 [inext] [-3]
  RETURN R1 1

PROTO_1:
  NEWTABLE R2 0 0
  GETIMPORT R3 K1 [pairs]
  MOVE R4 R0
  CALL R3 1 3
  FORGPREP_NEXT R3
  GETTABLE R8 R1 R6
  JUMPIF R8 [+2]
  LOADB R8 1
  SETTABLE R8 R2 R6
  FORGLOOP R3 1 [-5]
  RETURN R2 1

PROTO_2:
  NEWTABLE R2 0 0
  NEWTABLE R3 0 0
  GETIMPORT R4 K1 [ipairs]
  MOVE R5 R0
  CALL R4 1 3
  FORGPREP_INEXT R4
  MOVE R9 R1
  MOVE R10 R8
  CALL R9 1 1
  JUMPIFNOT R9 [+3]
  LOADB R9 1
  SETTABLE R9 R2 R8
  JUMP [+2]
  LOADB R9 1
  SETTABLE R9 R3 R8
  FORGLOOP R4 2 [inext] [-10]
  RETURN R2 2

PROTO_3:
  GETUPVAL R2 0
  MOVE R3 R0
  CALL R2 1 1
  JUMPIFNOT R2 [+2]
  LOADB R2 0
  RETURN R2 1
  JUMPIFNOT R0 [+7]
  GETTABLE R2 R1 R0
  JUMPIFNOT R2 [+2]
  LOADB R2 1
  RETURN R2 1
  GETTABLEKS R0 R0 K0 ["Parent"]
  JUMPBACK [-8]
  LOADB R2 0
  RETURN R2 1

MAIN:
  PREPVARARGS 0
  GETIMPORT R0 K1 [require]
  GETIMPORT R3 K3 [script]
  GETTABLEKS R2 R3 K4 ["Parent"]
  GETTABLEKS R1 R2 K5 ["isProtectedInstance"]
  CALL R0 1 1
  DUPCLOSURE R1 K6 [PROTO_0]
  DUPCLOSURE R2 K7 [PROTO_1]
  DUPCLOSURE R3 K8 [PROTO_2]
  DUPCLOSURE R4 K9 [PROTO_3]
  CAPTURE VAL R0
  DUPTABLE R5 K14 [{"arrayToSet", "diff", "splitArrayIntoValidSets", "isAnyInstanceAncestorInSet"}]
  SETTABLEKS R1 R5 K10 ["arrayToSet"]
  SETTABLEKS R2 R5 K11 ["diff"]
  SETTABLEKS R3 R5 K12 ["splitArrayIntoValidSets"]
  SETTABLEKS R4 R5 K13 ["isAnyInstanceAncestorInSet"]
  RETURN R5 1
